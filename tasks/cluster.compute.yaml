- name: Make sure /etc/riotkit directory exists
  become: yes
  become_user: root
  file:
      path: /etc/riotkit
      state: directory
      mode: "u+rw,g-r,o-r"
      owner: root
      group: root

- name: Create alternative resolv.conf
  become: yes
  become_user: root
  template:
      src: etc/resolv.conf
      dest: /etc/riotkit/resolv.conf

- name: Check if k3s is already installed
  register: k3s_installed
  stat:
      path: /etc/rancher/node/password

- name: Add primary node token
  become: yes
  become_user: root
  template:
      src: artifacts/primary-token
      dest: /etc/riotkit/primary-token
      mode: "u+rw,g-r,o-r"
      owner: root
      group: root

- name: Instal K3S compute node from get.k3s.io
  become: yes
  shell: |
      export INSTALL_K3S_VERSION="{{ k3s_version }}";
      {%- if vpn_enabled %}
      export K3S_URL="https://{{ vpn_primary_node_ip }}:6443";
      {%- else %}
      export K3S_URL="https://{{ primary_node_public_ip }}:6443";
      {%- endif %}
      export K3S_TOKEN_FILE="/etc/riotkit/primary-token";
      curl -sfL https://get.k3s.io | bash -s - \
          --node-name="{{ node_type }}" \
          --with-node-id \
          {%- if node_labels %}
          --node-label="{{ node_labels }}" \
          {%- endif %}
          {%- if node_taints %}
          --node-taint="{{ node_taints }}" \
          {%- endif %}
          --resolv-conf="/etc/riotkit/resolv.conf" \
          --token-file="/etc/riotkit/primary-token" \
          {%- if vpn_enabled %}
          --flannel-iface={{ flannel_iface }} \
          --server="https://{{ vpn_primary_node_ip }}:6443" \
          {%- else %}
          --server="https://{{ primary_node_public_ip }}:6443" \
          {%- endif %}
  when: not k3s_installed.stat.exists or force_k3s_upgrade

- name: Enable k3s at system startup
  become: yes
  become_user: root
  systemd:
      name: k3s-agent
      enabled: true
