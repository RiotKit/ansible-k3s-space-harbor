- become: yes
  become_user: root
  environment:
      KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  block:
      - name: Install argocd CLI
        get_url:
            url: "https://github.com/argoproj/argo-cd/releases/download/{{ argocd_version }}/argocd-linux-amd64"
            dest: /usr/local/bin/argocd
            mode: "u+rwx,g+rx,o+rx"

      - name: "Retrieve fingerprint for GIT host"
        shell: "ssh-keyscan -p {{ argocd_git_port }} {{ argocd_git_host }}"
        register: ssh_known_host_results
        ignore_errors: yes

      - name: "Add GIT address on host to known_hosts"
        known_hosts:
            name: "[{{ argocd_git_host }}]:{{ argocd_git_port }}"
            key: "{{ ssh_known_host_results.stdout }}"
            path: /etc/ssh/ssh_known_hosts
            state: present

      - name: Create namespace
        shell: "kubectl create namespace {{ argocd_namespace }} || true"

      - name: Install ArgoCD Core
        shell: "kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/{{ argocd_version }}/manifests/core-install.yaml -n argocd"

      # wait for ArgoCD to be ready
      - name: "Wait for ArgoCD to be up and ready"
        tags: ['sync']
        command: "kubectl wait --for=condition=ready pod --all -n argocd --timeout=1s"
        register: result
        until: result.rc == 0
        retries: 900
        delay: 1
        changed_when: false

      - name: "Login to ArgoCD"
        tags: ['sync']
        shell: |
            kubectl config set-context --current --namespace=argocd;
            argocd login --core

      - name: "Copy read-only GIT key"
        copy:
            content: "{{ cluster_git_repository.argocd_read_only_access_key }}"
            dest: "/tmp/.rkt-ro-git.rsa"
            mode: "0600"

      - name: "Add GIT credentials"
        tags: ['sync']
        shell: |
            argocd repocreds add {{ cluster_git_repository.remote }} --ssh-private-key-path /tmp/.rkt-ro-git.rsa --upsert

      - name: "Add GIT-SSH to known hosts"
        tags: ['sync']
        shell: |
            cat /etc/ssh/ssh_known_hosts | argocd cert add-ssh --batch 

      - name: Render root.yaml
        template:
            src: repository/root.yaml.j2
            dest: /tmp/root.yaml

      - name: "Add 'root' application that enables all other applications'"
        shell: "kubectl apply -f /tmp/root.yaml"
        retries: 10
        delay: 3
        register: root_creation
        until: root_creation.rc == 0

      - name: "Install 'root' - a repository with declarations'"
        tags: ['sync']
        shell: "argocd --core --plaintext app sync root"
        retries: 25
        delay: 3
        register: root_sync
        until: root_sync.rc == 0

      - name: "Install Traefik"
        tags: ['sync']
        shell: "argocd --core --plaintext app sync traefik --prune"
        retries: 25
        delay: 8
        register: traefik_sync
        until: traefik_sync.rc == 0

      - include: argocd.smtp.yaml
        tags: ['sync']
        when: mail_enabled

      - include: argocd.telegraf.yaml
        tags: ['sync']
        when: telegraf_enabled

  always:
      - name: "Delete temporary files containing sensitive information"
        file:
            path: "{{ item }}"
            state: absent
        with_items:
            - "/tmp/.rkt-ro-git.rsa"
            - "/tmp/argocd-initial-values.yaml"
