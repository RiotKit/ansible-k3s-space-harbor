- become: yes
  become_user: root
  environment:
      KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  block:
      - name: Install argocd CLI
        get_url:
            url: "https://github.com/argoproj/argo-cd/releases/download/{{ argocd_cli_version }}/argocd-linux-amd64"
            dest: /usr/local/bin/argocd
            mode: "u+rwx,g+rx,o+rx"

      - name: "Retrieve fingerprint for GIT host"
        shell: "ssh-keyscan -p {{ argocd_git_port }} {{ argocd_git_host }}"
        register: ssh_known_host_results
        ignore_errors: yes

      - name: "Add GIT address on host to known_hosts"
        known_hosts:
            name: "[{{ argocd_git_host }}]:{{ argocd_git_port }}"
            key: "{{ ssh_known_host_results.stdout }}"
            path: /etc/ssh/ssh_known_hosts
            state: present

      - name: Create namespace
        shell: "kubectl create namespace {{ argocd_namespace }} || true"

      - name: Create ArgoCD helm values
        template:
            src: "tmp/argocd-initial-values.yaml.j2"
            dest: "/tmp/argocd-initial-values.yaml"

      - name: Install ArgoCD using Helm
        shell: |
            helm upgrade --install argocd argo-cd --repo https://argoproj.github.io/argo-helm \
                --create-namespace \
                --values /tmp/argocd-initial-values.yaml \
                --namespace {{ argocd_namespace }} \
                --version={{ argocd_chart_version }} \
                --wait

      - name: Create a kubectl proxy background service to expose ArgoCD API for deployment time
        tags: ['sync']
        template:
            src: "etc/systemd/system/argocd-api-proxy.service"
            dest: "/etc/systemd/system/argocd-api-proxy.service"
            owner: root
            group: root
            mode: 0640

      - name: "Forward ArgoCD to localhost:8080"
        tags: ['sync']
        systemd:
            state: restarted
            name: "argocd-api-proxy"
            daemon_reload: yes
            enabled: no

      # wait for ArgoCD to be ready
      - name: "Wait for ArgoCD to be up and ready"
        tags: ['sync']
        command: "curl http://localhost:8080 -k -s --head"
        register: result
        until: result.stdout.find("200 OK") != -1
        retries: 900
        delay: 1
        changed_when: false

      - name: "Get initial secret password"
        tags: ['sync']
        shell: 'kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d'
        register: "initial_admin_secret"

      - name: "Login to ArgoCD"
        tags: ['sync']
        shell: |
            argocd --plaintext login localhost:8080 --username=admin --password='{{ argocd_admin_password }}' --insecure \
              || argocd --plaintext login localhost:8080 --username=admin --password='{{ argocd_old_password }}' --insecure \
              || argocd --plaintext login localhost:8080 --username=admin --password='{{ initial_admin_secret.stdout | trim }}' --insecure

      - name: "Change password"
        shell: |
            argocd account update-password --current-password='{{ argocd_admin_password }}' --new-password='{{ argocd_admin_password }}' \
              || argocd account update-password --current-password='{{ argocd_old_password }}' --new-password='{{ argocd_admin_password }}' \
              || argocd account update-password --current-password='{{ initial_admin_secret.stdout | trim }}' --new-password='{{ argocd_admin_password }}'

      - name: "Copy read-only GIT key"
        copy:
            content: "{{ cluster_git_repository.argocd_read_only_access_key }}"
            dest: "/tmp/.rkt-ro-git.rsa"
            mode: "0600"

      - name: Render root.yaml
        template:
            src: repository/root.yaml.j2
            dest: /tmp/root.yaml

      - name: "Add 'root' application that enables all other applications'"
        shell: "kubectl apply -f /tmp/root.yaml"
        retries: 10
        delay: 3
        register: root_creation
        until: root_creation.rc == 0

      - name: "Install 'root' - a repository with declarations'"
        tags: ['sync']
        shell: "argocd --plaintext app sync root"
        retries: 25
        delay: 3
        register: root_sync
        until: root_sync.rc == 0

      - name: "Install Traefik"
        tags: ['sync']
        shell: "argocd --plaintext app sync traefik --prune"
        retries: 25
        delay: 8
        register: traefik_sync
        until: traefik_sync.rc == 0

      - name: "Install ArgoCD ingress route"
        tags: ['sync']
        shell: "argocd --plaintext app sync argocd-ingress --prune"
        retries: 25
        delay: 8
        register: traefik_sync
        until: traefik_sync.rc == 0

      - include: argocd.smtp.yaml
        tags: ['sync']
        when: mail_enabled

      - include: argocd.telegraf.yaml
        tags: ['sync']
        when: telegraf_enabled

  always:
      - name: "Turn off ArgoCD port forwarding"
        tags: ['sync']
        systemd:
            state: stopped
            name: "argocd-api-proxy"
            enabled: no

      - name: "Delete temporary files containing sensitive information"
        file:
            path: "{{ item }}"
            state: absent
        with_items:
            - "/tmp/.rkt-ro-git.rsa"
            - "/tmp/argocd-initial-values.yaml"
