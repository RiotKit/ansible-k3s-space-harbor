- name: Create temporary directory for git repository preparation
  tags: ['git', 'git_all']
  file:
      path: /tmp/git-repository
      state: directory

- name: Write GIT configuration key
  tags: ['git', 'git_all']
  copy:
      content: "{{ cluster_git_repository.deployment_time_access_key }}"
      dest: "/tmp/.rkt-git.rsa"
      mode: "0600"

- block:
    - name: Clone
      tags: ['git', 'git_all']
      git:
          key_file: "/tmp/.rkt-git.rsa"
          repo: "{{ cluster_git_repository.remote }}"
          version: "{{ cluster_git_repository.branch }}"
          dest: /tmp/git-repository
          clone: yes
          update: yes
          accept_hostkey: yes
          force: yes
      environment:
          GIT_ASKPASS: "/usr/bin/true"

    - name: Prepare git identity
      tags: ['git', 'git_all']
      shell: "cd /tmp/git-repository; git config --local user.name 'Ansible @ Riotkit Role'; git config --local user.email 'example@example.org'"

    - name: Create directories
      tags: ['git', 'git_all']
      file:
          dest: "/tmp/git-repository/{{ item }}"
          state: directory
      with_items:
          - src
          - src/argocd
          - src/telegraf-certs
          - definitions
          - definitions/infrastructure
          - definitions/applications

    - include: repository.infracheck.yaml
      tags: ['git_infracheck', 'git_all']
      when: infracheck_enabled

    - include: repository.smtp.yaml
      tags: ['git_smtp', 'git_all']
      when: mail_enabled

    - include: repository.telegraf.yaml
      tags: ['git_telegraf', 'git_all']
      when: telegraf_enabled

    - name: Create files from templates
      tags: ['git_traefik', 'git_all']
      template:
          src: "repository/{{ item }}"
          dest: /tmp/git-repository/{{ item | regex_replace('\.j2$', '') }}
      with_items:
          - definitions/infrastructure/traefik.yaml.j2
          - README.md

    - name: Commit changes
      tags: ['git', 'git_all']
      shell: "cd /tmp/git-repository && git add . && git status && git commit -m 'k3s-riotkit update' || true"

    - name: Push changes
      tags: ['git', 'git_all']
      shell: "cd /tmp/git-repository && git push --force"
      environment:
          GIT_SSH_COMMAND: 'ssh -i /tmp/.rkt-git.rsa'
  always:
      - name: Delete repository key
        tags: ['git', 'git_all']
        file:
            path: "/tmp/.rkt-git.rsa"
            state: absent

      - name: Delete repository directory
        tags: ['git', 'git_all']
        file:
            path: /tmp/git-repository
            state: absent
